{"version":3,"sources":["API/axios.js","components/Row.js","API/key.js","components/Banner.js","components/Nav.js","App.js","index.js"],"names":["mainUrl","axios","create","baseURL","Row","props","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","fetchUrl","request","data","results","fetchData","className","title","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","isLargeRow","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","KEY","extensions","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchTopActionMovies","fetchTopComedyMovies","fetchTopHorrorMovies","fetchTopRomanceMovies","fetchTopDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46893e34.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst mainUrl = axios.create({\n    baseURL: `https://api.themoviedb.org/3`\n})\n\nexport default mainUrl; ","import React, { useState, useEffect } from \"react\";\nimport axios from \"../API/axios\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer'\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(props) {\n  const [movies, setMovies] = useState([]);\n  const[trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(props.fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [props.fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const handleClick = (movie)=>{\n    if(trailerUrl) {\n      setTrailerUrl(\"\")\n    }else{\n      movieTrailer(movie?.name || \"\")\n        .then(url => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get('v'))\n        }).catch(error => console.log(error))\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <h2>{props.title}</h2>\n      <div className=\"row-images\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={()=> handleClick(movie)}\n              className={`row-image ${props.isLargeRow && \"row-image-large\"}`}\n              src={`${baseUrl}${\n                props.isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","const KEY = `0b5e010016fdae1b2413e7828d8b1f92`\n\nconst extensions = {\n    fetchTrending: `/trending/all/week?api_key=${KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${KEY}&language=en-US`,\n    fetchTopActionMovies: `/discover/movie?api_key=${KEY}&with_genres=28`,\n    fetchTopComedyMovies: `/discover/movie?api_key=${KEY}&with_genres=35`,\n    fetchTopHorrorMovies: `/discover/movie?api_key=${KEY}&with_genres=27`,\n    fetchTopRomanceMovies: `/discover/movie?api_key=${KEY}&with_genres=10749`,\n    fetchTopDocumentaries: `/discover/movie?api_key=${KEY}&with_genres=99`\n}\n\nexport default extensions;\n","import React, { useState, useEffect } from \"react\";\nimport extensions from \"../API/key\";\nimport axios from \"../API/axios\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(extensions.fetchTrending);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n\n    fetchData();\n  }, []);\n\n  function truncate(str, n){\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner-content\">\n        <h1 className=\"banner-title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n        <div className=\"banner-buttons\">\n          <button className=\"banner-button\">Play</button>\n          <button className=\"banner-button\">My List</button>\n        </div>\n          <h1 className=\"movie-description\">{truncate(movie.overview, 150)}</h1>\n      </div>\n\n      <div className=\"fade-bottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`Nav ${show && \"nav-black\"}`}>\n      <img\n        className=\"nav-logo\"\n        src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav-avatar\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n        alt=\"Avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.css\";\nimport Row from \"./components/Row\";\nimport extensions from \"./API/key\";\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        isLargeRow\n        fetchUrl={extensions.fetchNetflixOriginals}\n      />\n      <Row title=\"Trending Now\" fetchUrl={extensions.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={extensions.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={extensions.fetchTopActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={extensions.fetchTopComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={extensions.fetchTopHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={extensions.fetchTopRomanceMovies} />\n      <Row title=\"Documentarires\" fetchUrl={extensions.fetchTopDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}